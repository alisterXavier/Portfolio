[
  {
    "title": "E-commerce App",
    "stack": [
      "Next.js",
      "Redux",
      "JavaScript",
      "Typescript",
      "Tailwind",
      "Express.js",
      "Docker",
      "Supabase",
      "OpenApi",
      "DigitalOcean",
      "CircleCi"
    ],
    "desc": "The e-commerce application is built with modern web technologies such as Next.js for React applications and Redux for state management, using both JavaScript and TypeScript for development versatility. Tailwind ensures efficient styling, while Express.js serves as the backend framework. The app uses Docker for containerization, Supabase for database management, and OpenAPI for defining its API. It is hosted on DigitalOcean and AWS for deployment flexibility and redundancy. CircleCI automates continuous integration and deployment, streamlining development and ensuring consistent delivery of new features and fixes. This setup provides a robust and efficient e-commerce platform.",
    "git_link": "https://github.com/alisterXavier/ecommerce-project-uni",
    "completed": false,
    "img": [
      "/assets/Project-images/PAO/app_1.png",
      "/assets/Project-images/PAO/app_2.png",
      "/assets/Project-images/PAO/app_3.png",
      "/assets/Project-images/PAO/app_4.png"
    ]
  },
  {
    "img": [
      "/assets/Project-images/arcade-asylum/app_1.png",
      "/assets/Project-images/arcade-asylum/app_2.png",
      "/assets/Project-images/arcade-asylum/app_3.png",
      "/assets/Project-images/arcade-asylum/app_4.png"
    ],
    "title": "Arcade Asylum",
    "stack": ["Firebase", "Express.js", "Vue.js", "Pinia", "JavaScript", "Css"],
    "desc": "The classic game store is a web application built using a combination of modern and traditional web technologies. The store offers a selection of limited items and uses Stripe for a secure and smooth checkout process. Firebase serves as the backend, providing data storage and real-time synchronization for the application. Express.js powers the server-side, handling API requests efficiently. The front-end is developed with Vue.js, a popular JavaScript framework, and Pinia for state management. JavaScript and CSS are employed for scripting and styling, respectively. This technology stack creates an intuitive, responsive, and reliable classic game store experience for users.",
    "git_link": "https://github.com/alisterXavier/ArcadeAsylum",
    "app_link": "https://arcade-asylum.vercel.app/",
    "completed": true
  },
  {
    "img": [
      "/assets/Project-images/e-commerce/app_1.png",
      "/assets/Project-images/e-commerce/app_2.png",
      "/assets/Project-images/e-commerce/app_3.png",
      "/assets/Project-images/e-commerce/app_4.png",
      "/assets/Project-images/e-commerce/app_5.png"
    ],
    "title": "e-commerce App",
    "stack": ["React.js", "JavaScript", "Css"],
    "desc": "",
    "git_link": "https://github.com/alisterXavier/e-commerce",
    "app_link": "http://e-commerce-dremanic.vercel.app/",
    "completed": true
  },

  {
    "img": [
      "/assets/Project-images/BlaaApp2.0/app_1.png",
      "/assets/Project-images/BlaaApp2.0/app_2.png",
      "/assets/Project-images/BlaaApp2.0/app_3.png",
      "/assets/Project-images/BlaaApp2.0/app_4.png",
      "/assets/Project-images/BlaaApp2.0/app_5.png",
      "/assets/Project-images/BlaaApp2.0/app_6.png",
      "/assets/Project-images/BlaaApp2.0/app_7.png",
      "/assets/Project-images/BlaaApp2.0/app_8.png"
    ],
    "title": "Social Media App 2.0",
    "stack": [
      "Firebase",
      "Express.js",
      "React.js",
      "Redux",
      "TypeScript",
      "Css"
    ],
    "desc": "The updated version of the social media app utilizes Firebase, Express.js, React.js, Redux, TypeScript, and CSS to provide an improved user experience. Firebase supports data storage and real-time synchronization, while Express.js manages server-side API requests. React.js powers a dynamic and responsive user interface, with Redux handling efficient state management. TypeScript ensures type safety and code quality. The app features a better UI than the previous MERN app, offering a polished and user-friendly design with enhanced navigation. This results in a more refined and enjoyable social media experience for users.",
    "git_link": "https://github.com/alisterXavier/BlaaApp2.0",
    "app_link": "https://blaa-app-2-0.vercel.app/",
    "completed": true
  },
  {
    "img": [
      "/assets/Project-images/BlaaApp/app_1.png",
      "/assets/Project-images/BlaaApp/app_2.png",
      "/assets/Project-images/BlaaApp/app_3.png",
      "/assets/Project-images/BlaaApp/app_4.png",
      "/assets/Project-images/BlaaApp/app_5.png",
      "/assets/Project-images/BlaaApp/app_6.png",
      "/assets/Project-images/BlaaApp/app_7.png"
    ],
    "title": "Social Media App",
    "stack": [
      "MongoDB",
      "Express.js",
      "React.js",
      "JavaScript",
      "Node.js",
      "Css"
    ],
    "desc": "A full-stack social media application built using the MERN stack (MongoDB, Express.js, React, and Node.js) and Socket.IO offers a dynamic and efficient platform for users to connect and share content. The backend, powered by Node.js and Express.js, handles API requests and server-side logic, while MongoDB provides flexible and scalable data storage. React creates a responsive and intuitive user interface, enabling modular code and easy feature implementation. Socket.IO is integrated for real-time communication features such as instant messaging, live updates, and notifications. Users can create profiles, post content, follow others, and engage with posts through likes and comments, delivering a seamless and interactive social media experience.",
    "git_link": "https://github.com/alisterXavier/blaa-app",
    "completed": true
  },

  {
    "title": "Aegis",
    "img": [],
    "stack": ["Next.js", "Typescript", "Tailwind", "MongoDB"],
    "desc": "This tool simplifies SSL certificate management for your web servers. It offers a user-friendly interface, centralizes all your SSL information, and automates tasks like certificate creation and server configuration. With this tool, you can manage your SSL certificates efficiently and save time.",
    "git_link": "https://github.com/alisterXavier/aegis",
    "completed": false
  },

  {
    "img": [
      "/assets/Project-images/to-infinity-and-beyond/app_1.png",
      "/assets/Project-images/to-infinity-and-beyond/app_2.png",
      "/assets/Project-images/to-infinity-and-beyond/app_3.png",
      "/assets/Project-images/to-infinity-and-beyond/app_4.png"
    ],
    "title": "To infinity and beyond",
    "desc": "A web app the displays some celestial bodies made using threeJS.",
    "stack": ["Next.js", "JavaScript", "Three.js", "Css"],
    "git_link": "https://github.com/alisterXavier/To-infinity-and-beyond",
    "app_link": "https://to-infinity-and-beyond.vercel.app/",
    "completed": true
  },

  {
    "img": [
      "/assets/Project-images/music-downloader/app_1.png",
      "/assets/Project-images/music-downloader/app_2.png"
    ],
    "title": "Music Downloader",
    "stack": ["Next.js", "TypeScript", "Css"],
    "desc": "A music downloader application built using Next.js and an Apollo GraphQL server offers a modern and efficient platform for users to discover and download music. Apollo GraphQL provides a flexible API for querying music data, while Next.js ensures a fast and smooth user interface with server-side rendering. Users can search for, browse, and download music directly within the app, benefiting from precise data fetching and optimal performance.",
    "git_link": "https://github.com/alisterXavier/Music-downloader",
    "app_link": "https://music-downloader-three.vercel.app/",
    "completed": true
  },

  {
    "img": [
      "/assets/Project-images/Crypto/app_1.png",
      "/assets/Project-images/Crypto/app_2.png",
      "/assets/Project-images/Crypto/app_3.png",
      "/assets/Project-images/Crypto/app_4.png"
    ],
    "title": "Cryptocurrency Platform",
    "stack": ["Next.js", "JavaScript", "Css", "Coinranking Api"],
    "desc": "A cryptocurrency web app clone of Uniswap built using Next.js, JavaScript, CSS, and the Coinranking API offers users an efficient and user-friendly platform for interacting with digital currencies. Next.js provides fast server-side rendering, resulting in smooth navigation and optimal performance, while CSS ensures an intuitive and visually appealing user interface. JavaScript powers the app's interactivity, allowing users to search, browse, and engage with various cryptocurrencies seamlessly. By integrating the Coinranking API, the app fetches real-time data on cryptocurrencies, enabling users to make informed decisions",
    "git_link": "https://github.com/alisterXavier/Crypto-Curr",
    "app_link": "https://crypto-curr-eta.vercel.app/components/swap",
    "completed": true
  },

  {
    "img": [
      "/assets/Project-images/netflix/app_1.png",
      "/assets/Project-images/netflix/app_2.png",
      "/assets/Project-images/netflix/app_3.png",
      "/assets/Project-images/netflix/app_4.png",
      "/assets/Project-images/netflix/app_5.png",
      "/assets/Project-images/netflix/app_6.png",
      "/assets/Project-images/netflix/app_7.png",
      "/assets/Project-images/netflix/app_8.png",
      "/assets/Project-images/netflix/app_9.png"
    ],
    "title": "Netflix Clone",
    "stack": ["React.js", "JavaScript", "Express.js", "Firebase", "Css"],
    "desc": "Netflix Clone made using Firebase to store all of its data.",
    "git_link": "https://github.com/alisterXavier/NetflixClone",
    "app_link": "https://netflix-clone-qwerty.vercel.app/",
    "completed": true
  },

  {
    "img": [
      "/assets/Project-images/batman/app_1.png",
      "/assets/Project-images/batman/app_2.png",
      "/assets/Project-images/batman/app_3.png",
      "/assets/Project-images/batman/app_4.png",
      "/assets/Project-images/batman/app_5.png"
    ],
    "title": "Batman-Joker Css Playthrough",
    "stack": ["Next.js", "JavaScript", "Tailwind"],
    "desc": "Just a playground for css",
    "git_link": "https://github.com/alisterXavier/Batman-Joker/",
    "app_link": "https://batman-joker.vercel.app/",
    "completed": true
  },
  {
    "img": [
      "/assets/Project-images/rockPaperScissors/app_1.png",
      "/assets/Project-images/rockPaperScissors/app_2.png",
      "/assets/Project-images/rockPaperScissors/app_3.png",
      "/assets/Project-images/rockPaperScissors/app_4.png",
      "/assets/Project-images/rockPaperScissors/app_5.png"
    ],
    "title": "Rock Paper Scissors",
    "stack": ["Next.js", "JavaScript", "Css"],
    "desc": "Rock Paper Scissors game Player vs PC, Has an additional mode Rock Paper Scissors Lizard Spock (Star Trek) - Frontend mentor",
    "git_link": "https://github.com/alisterXavier/Rock-Paper-Scissor",
    "app_link": "https://rock-paper-scissor-fx9r.vercel.app/",
    "completed": true
  },
  {
    "img": ["/assets/Project-images/ip-address/app_1.png"],
    "title": "Ip Address Tracker",
    "stack": ["Next.js", "JavaScript", "Ipify API", "Leaflet", "Css"],
    "desc": "Designs from Frontend mentor",
    "git_link": "https://github.com/alisterXavier/ip-address-tracker",
    "app_link": "https://ip-address-tracker-dremanic.vercel.app/",
    "completed": true
  },
  {
    "img": ["/assets/Project-images/nft-landing/app_1.png"],
    "title": "Nft Landing Page",
    "stack": ["Next.js", "JavaScript", "Css"],
    "desc": "Single page site of an Nft landing page",
    "git_link": "https://github.com/alisterXavier/NFT-LandingPage",
    "app_link": "https://nft-landing-page-bzfd.vercel.app/",
    "completed": true
  },
  {
    "title": "WikiScape",
    "img": [],
    "stack": ["React.js", "JavaScript", "Python Flask", "Python Wikipedia Api"],
    "desc": "A simplified version of Wikipedia using Python's limited Wikipedia API. The application will retrieve data from Wikipedia and present it to the user in a concise format. The depth of the data retrieval is restricted to level one, meaning that the information provided will be limited to a single layer of content from the initial search. This approach ensures that the user receives a focused, straightforward summary of the topic they are searching for without delving too deeply into the linked or related information.",
    "git_link": "https://github.com/alisterXavier/Wiki-React-Flask",
    "completed": true
  }
]
